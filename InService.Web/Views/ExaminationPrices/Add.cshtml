@model ExaminationPrice
@{
    var Examination = (Examination)ViewBag.Examination;
}
@section subnav{
    <div class="navbar-nav">
        <div class="nav-item"><a class="nav-link navbar-brand" href="@Url.Index("Examinations")"><i class="mdi mdi-chevron-double-left"></i>Examinations</a></div>
        <div class="nav-item"><a class="nav-link " href="@Url.Details("Examinations",new { Examination.ID })"> @Examination.Topic</a></div>
        <div class="nav-item"><a class="nav-link " href="@Url.Add(new { Examination.ID })"> Add price</a></div>
    </div>
}
<h4 class="font-weight-light">Add new price</h4>
<div class="row">
    <div class="col-md-7">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="ExaminationID" value="@Examination.ID" />
            <div class="card border-success">
                <div class="card-body">

                    <div class="row form-group">
                        <label class="col-md-4">Unit price</label>
                        <div class="col-md-8">
                            <div class="input-group">
                                @Html.TextBoxFor(c => c.Amount, null, new { @class = "form-control", placeholder = "Amount", required = "", type = "number" })
                                @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(c => c.CurrencyID, (SelectList)ViewBag.Currencies, "Currency..", new { @class = "form-control CurrencyID", required = "" })
                                @Html.ValidationMessageFor(m => m.CurrencyID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-inline">
                        <div class="form-group">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="CompanyCode" value="1" id="Doc" data-bind="checked:addDoc" />
                                <label class="form-check-label" for="Doc">Advanced</label>
                            </div>
                        </div>
                    </div>

                    <div data-bind="visible:canAddCompany">
                        <hr />
                        <div class="row form-group">
                            <label class="col-md-4">Payment method</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(c => c.PaymentMethodID, (SelectList)ViewBag.PaymentMethods, "Select..", new { @class = "form-control PaymentMethodID" })
                                @Html.ValidationMessageFor(m => m.PaymentMethodID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-right">
                    <button class="btn btn-success">Add price <i class="mdi mdi-checkbox-marked-circle"></i></button>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            ko.applyBindings(new MyModel());
            $('.PaymentMethodID,.CurrencyID').select2({
                theme: "bootstrap4",
            });
        });
        function MyModel() {
            var self = this;
            self.addNote = ko.observable(false);
            self.addDoc = ko.observable(false);
            self.canAddNote = ko.computed(() => {
                return self.addNote() == true;
            }, self);
            self.canAddCompany = ko.computed(() => {
                return self.addDoc() == true;
            }, self);
        }
    </script>
}

